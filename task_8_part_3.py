"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие
только чисел. Проверить работу исключения на реальном примере. Необходимо запрашивать у
пользователя данные и заполнять список. Класс-исключение должен контролировать типы данных
элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам
не остановит работу скрипта, введя, например, команду “stop”. При этом скрипт завершается,
сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При
вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить
его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести
текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна
завершаться.
"""


class NotNumber(Exception):

    def __init__(self, txt):
        self.txt = txt


my_list = []
while True:
    try:
        var = input('Введите число, или "stop", чтобы завершить: ')
        if var == 'stop':
            break

        check = var
        if len(var) != 0 and var[0] == '-':
            check = var.replace('-', '', 1)
        if check.replace('.', '', 1).isdigit():
            my_list.append(float(var) if var.find('.') != -1 else int(var))
        else:
            raise NotNumber('Принимаются только числа')

    except NotNumber as e:
        print(e)

print(my_list)
